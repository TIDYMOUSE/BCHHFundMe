{
  "address": "0x3d545225EB65a7fD80242B6aC0AB64d72c700765",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "fundersAdd",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xeb06c22e1b76665869edc64ddfcfaa14d9d8d48ddb1910339196fc19532f203c",
  "receipt": {
    "to": null,
    "from": "0xdaDD30aAEe8E15F925b3b0F0e18f84E6FE62C6f9",
    "contractAddress": "0x3d545225EB65a7fD80242B6aC0AB64d72c700765",
    "transactionIndex": 16,
    "gasUsed": "890932",
    "logsBloom": "0x
    "blockHash": "0xb24499dc5b9043538b7243efc1771605c935d0fe056afb67166370bbd20995ff",
    "transactionHash": "0xeb06c22e1b76665869edc64ddfcfaa14d9d8d48ddb1910339196fc19532f203c",
    "logs": [],
    "blockNumber": 4199440,
    "cumulativeGasUsed": "6148296",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 3,
  "solcInputHash": "bcea47bafbcb6f4d290e809f882397fd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fundersAdd\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/Converter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.12;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n//all functions in a library are internal and it cannot have static values\\n//val1.fun(val2, val3,...); (Syntax for imported functions fun() which takes params val1, val2, val3, ...)\\n\\nlibrary Converter {\\n    function getUsPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        // );\\n        (, int price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10); // us price is thousands and wei is in 18 zeroes so as to match them, we multiply be 10zeroes\\n    }\\n\\n    function getEthUs(\\n        uint256 ethAmt,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        return ((ethAmt * getUsPrice(priceFeed)) / 1e18);\\n    }\\n}\\n\",\"keccak256\":\"0x3ffd16e29357fb783a4bba78f5a6861adee346fc5c59d4d549b45783b0276374\",\"license\":\"MIT\"},\"contracts/fundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.12;\\n\\nimport \\\"./Converter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    //ETH to usd : 0x694AA1769357215DE4FAC081bf1f309aDC325306\\n\\n    using Converter for uint256;\\n\\n    AggregatorV3Interface public priceFeed;\\n    address public immutable owner;\\n    uint256 constant minVal = 10 * 1e18;\\n    mapping(address => uint256) public funders;\\n    address[] public fundersAdd;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != owner) revert NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getEthUs(priceFeed) >= minVal, \\\"Put more, Bro\\\");\\n        if (fundersAdd.length > 0) {\\n            for (uint i = 0; i < fundersAdd.length; i++) {\\n                if (fundersAdd[i] == msg.sender) break;\\n                else if (\\n                    fundersAdd[i] != msg.sender && i == (fundersAdd.length - 1)\\n                ) fundersAdd.push(msg.sender);\\n            }\\n        } else fundersAdd.push(msg.sender);\\n\\n        funders[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw(uint256 amt, address _from) public onlyOwner {\\n        require(amt <= funders[_from], \\\"You are asking for too much\\\");\\n        funders[_from] -= amt;\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{value: amt}(\\\"\\\");\\n        require(callSuccess, \\\"Failure in calling\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x27a21883e182e4ab9362bd1b3b1561e5446f14dc538344782d17787c8d36b628\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516200101b3803806200101b83398181016040528101906100349190610111565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100de826100b3565b9050919050565b6100ee816100d3565b81146100f957600080fd5b50565b60008151905061010b816100e5565b92915050565b600060208284031215610127576101266100ae565b5b6000610135848285016100fc565b91505092915050565b608051610eba620001616000396000818161044b01526106d40152610eba6000f3fe6080604052600436106100585760003560e01c8062f714ce14610071578063031b36771461009a578063741bef1a146100d757806380da04da146101025780638da5cb5b1461013f578063b60d42881461016a57610067565b3661006757610065610174565b005b61006f610174565b005b34801561007d57600080fd5b5061009860048036038101906100939190610851565b610449565b005b3480156100a657600080fd5b506100c160048036038101906100bc9190610891565b610657565b6040516100ce91906108cd565b60405180910390f35b3480156100e357600080fd5b506100ec61066f565b6040516100f99190610947565b60405180910390f35b34801561010e57600080fd5b5061012960048036038101906101249190610962565b610693565b604051610136919061099e565b60405180910390f35b34801561014b57600080fd5b506101546106d2565b604051610161919061099e565b60405180910390f35b610172610174565b005b678ac7230489e800006101b060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106f690919063ffffffff16565b10156101f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e890610a16565b60405180910390fd5b6000600280549050111561038d5760005b600280549050811015610387573373ffffffffffffffffffffffffffffffffffffffff166002828154811061023a57610239610a36565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160315610387573373ffffffffffffffffffffffffffffffffffffffff16600282815481106102ac576102ab610a36565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415801561030b575060016002805490506103089190610a94565b81145b15610374576002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b808061037f90610ac8565b915050610202565b506103f1565b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104409190610b10565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104ce576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610550576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054790610b90565b60405180910390fd5b81600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461059f9190610a94565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff16836040516105cc90610be1565b60006040518083038185875af1925050503d8060008114610609576040519150601f19603f3d011682016040523d82523d6000602084013e61060e565b606091505b5050905080610652576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064990610c42565b60405180910390fd5b505050565b60016020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600281815481106106a357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000670de0b6b3a764000061070a83610727565b846107159190610c62565b61071f9190610cd3565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610775573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107999190610d91565b5050509150506402540be400816107b09190610e0c565b915050919050565b600080fd5b6000819050919050565b6107d0816107bd565b81146107db57600080fd5b50565b6000813590506107ed816107c7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061081e826107f3565b9050919050565b61082e81610813565b811461083957600080fd5b50565b60008135905061084b81610825565b92915050565b60008060408385031215610868576108676107b8565b5b6000610876858286016107de565b92505060206108878582860161083c565b9150509250929050565b6000602082840312156108a7576108a66107b8565b5b60006108b58482850161083c565b91505092915050565b6108c7816107bd565b82525050565b60006020820190506108e260008301846108be565b92915050565b6000819050919050565b600061090d610908610903846107f3565b6108e8565b6107f3565b9050919050565b600061091f826108f2565b9050919050565b600061093182610914565b9050919050565b61094181610926565b82525050565b600060208201905061095c6000830184610938565b92915050565b600060208284031215610978576109776107b8565b5b6000610986848285016107de565b91505092915050565b61099881610813565b82525050565b60006020820190506109b3600083018461098f565b92915050565b600082825260208201905092915050565b7f507574206d6f72652c2042726f00000000000000000000000000000000000000600082015250565b6000610a00600d836109b9565b9150610a0b826109ca565b602082019050919050565b60006020820190508181036000830152610a2f816109f3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a9f826107bd565b9150610aaa836107bd565b9250828203905081811115610ac257610ac1610a65565b5b92915050565b6000610ad3826107bd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b0557610b04610a65565b5b600182019050919050565b6000610b1b826107bd565b9150610b26836107bd565b9250828201905080821115610b3e57610b3d610a65565b5b92915050565b7f596f75206172652061736b696e6720666f7220746f6f206d7563680000000000600082015250565b6000610b7a601b836109b9565b9150610b8582610b44565b602082019050919050565b60006020820190508181036000830152610ba981610b6d565b9050919050565b600081905092915050565b50565b6000610bcb600083610bb0565b9150610bd682610bbb565b600082019050919050565b6000610bec82610bbe565b9150819050919050565b7f4661696c75726520696e2063616c6c696e670000000000000000000000000000600082015250565b6000610c2c6012836109b9565b9150610c3782610bf6565b602082019050919050565b60006020820190508181036000830152610c5b81610c1f565b9050919050565b6000610c6d826107bd565b9150610c78836107bd565b9250828202610c86816107bd565b91508282048414831517610c9d57610c9c610a65565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cde826107bd565b9150610ce9836107bd565b925082610cf957610cf8610ca4565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d2381610d04565b8114610d2e57600080fd5b50565b600081519050610d4081610d1a565b92915050565b6000819050919050565b610d5981610d46565b8114610d6457600080fd5b50565b600081519050610d7681610d50565b92915050565b600081519050610d8b816107c7565b92915050565b600080600080600060a08688031215610dad57610dac6107b8565b5b6000610dbb88828901610d31565b9550506020610dcc88828901610d67565b9450506040610ddd88828901610d7c565b9350506060610dee88828901610d7c565b9250506080610dff88828901610d31565b9150509295509295909350565b6000610e1782610d46565b9150610e2283610d46565b9250828202610e3081610d46565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610e6857610e67610a65565b5b8282058414831517610e7d57610e7c610a65565b5b509291505056fea26469706673582212202911f280a8f0132a546fec2e124f178d9cb8d742f78d1d6a34058ad08094a95e64736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106100585760003560e01c8062f714ce14610071578063031b36771461009a578063741bef1a146100d757806380da04da146101025780638da5cb5b1461013f578063b60d42881461016a57610067565b3661006757610065610174565b005b61006f610174565b005b34801561007d57600080fd5b5061009860048036038101906100939190610851565b610449565b005b3480156100a657600080fd5b506100c160048036038101906100bc9190610891565b610657565b6040516100ce91906108cd565b60405180910390f35b3480156100e357600080fd5b506100ec61066f565b6040516100f99190610947565b60405180910390f35b34801561010e57600080fd5b5061012960048036038101906101249190610962565b610693565b604051610136919061099e565b60405180910390f35b34801561014b57600080fd5b506101546106d2565b604051610161919061099e565b60405180910390f35b610172610174565b005b678ac7230489e800006101b060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106f690919063ffffffff16565b10156101f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e890610a16565b60405180910390fd5b6000600280549050111561038d5760005b600280549050811015610387573373ffffffffffffffffffffffffffffffffffffffff166002828154811061023a57610239610a36565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160315610387573373ffffffffffffffffffffffffffffffffffffffff16600282815481106102ac576102ab610a36565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415801561030b575060016002805490506103089190610a94565b81145b15610374576002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b808061037f90610ac8565b915050610202565b506103f1565b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104409190610b10565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104ce576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610550576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054790610b90565b60405180910390fd5b81600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461059f9190610a94565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff16836040516105cc90610be1565b60006040518083038185875af1925050503d8060008114610609576040519150601f19603f3d011682016040523d82523d6000602084013e61060e565b606091505b5050905080610652576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064990610c42565b60405180910390fd5b505050565b60016020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600281815481106106a357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000670de0b6b3a764000061070a83610727565b846107159190610c62565b61071f9190610cd3565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610775573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107999190610d91565b5050509150506402540be400816107b09190610e0c565b915050919050565b600080fd5b6000819050919050565b6107d0816107bd565b81146107db57600080fd5b50565b6000813590506107ed816107c7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061081e826107f3565b9050919050565b61082e81610813565b811461083957600080fd5b50565b60008135905061084b81610825565b92915050565b60008060408385031215610868576108676107b8565b5b6000610876858286016107de565b92505060206108878582860161083c565b9150509250929050565b6000602082840312156108a7576108a66107b8565b5b60006108b58482850161083c565b91505092915050565b6108c7816107bd565b82525050565b60006020820190506108e260008301846108be565b92915050565b6000819050919050565b600061090d610908610903846107f3565b6108e8565b6107f3565b9050919050565b600061091f826108f2565b9050919050565b600061093182610914565b9050919050565b61094181610926565b82525050565b600060208201905061095c6000830184610938565b92915050565b600060208284031215610978576109776107b8565b5b6000610986848285016107de565b91505092915050565b61099881610813565b82525050565b60006020820190506109b3600083018461098f565b92915050565b600082825260208201905092915050565b7f507574206d6f72652c2042726f00000000000000000000000000000000000000600082015250565b6000610a00600d836109b9565b9150610a0b826109ca565b602082019050919050565b60006020820190508181036000830152610a2f816109f3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a9f826107bd565b9150610aaa836107bd565b9250828203905081811115610ac257610ac1610a65565b5b92915050565b6000610ad3826107bd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b0557610b04610a65565b5b600182019050919050565b6000610b1b826107bd565b9150610b26836107bd565b9250828201905080821115610b3e57610b3d610a65565b5b92915050565b7f596f75206172652061736b696e6720666f7220746f6f206d7563680000000000600082015250565b6000610b7a601b836109b9565b9150610b8582610b44565b602082019050919050565b60006020820190508181036000830152610ba981610b6d565b9050919050565b600081905092915050565b50565b6000610bcb600083610bb0565b9150610bd682610bbb565b600082019050919050565b6000610bec82610bbe565b9150819050919050565b7f4661696c75726520696e2063616c6c696e670000000000000000000000000000600082015250565b6000610c2c6012836109b9565b9150610c3782610bf6565b602082019050919050565b60006020820190508181036000830152610c5b81610c1f565b9050919050565b6000610c6d826107bd565b9150610c78836107bd565b9250828202610c86816107bd565b91508282048414831517610c9d57610c9c610a65565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cde826107bd565b9150610ce9836107bd565b925082610cf957610cf8610ca4565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d2381610d04565b8114610d2e57600080fd5b50565b600081519050610d4081610d1a565b92915050565b6000819050919050565b610d5981610d46565b8114610d6457600080fd5b50565b600081519050610d7681610d50565b92915050565b600081519050610d8b816107c7565b92915050565b600080600080600060a08688031215610dad57610dac6107b8565b5b6000610dbb88828901610d31565b9550506020610dcc88828901610d67565b9450506040610ddd88828901610d7c565b9350506060610dee88828901610d7c565b9250506080610dff88828901610d31565b9150509295509295909350565b6000610e1782610d46565b9150610e2283610d46565b9250828202610e3081610d46565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610e6857610e67610a65565b5b8282058414831517610e7d57610e7c610a65565b5b509291505056fea26469706673582212202911f280a8f0132a546fec2e124f178d9cb8d742f78d1d6a34058ad08094a95e64736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 103,
        "contract": "contracts/fundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 114,
        "contract": "contracts/fundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 117,
        "contract": "contracts/fundMe.sol:FundMe",
        "label": "fundersAdd",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}